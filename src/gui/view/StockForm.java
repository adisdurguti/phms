/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.view;

import bll.Product;
import bll.Stock;
import connection.Connect;
import dal.DbUtils;
import dal.PharmacyException;
import dal.ProductRepository;
import dal.StockInterface;
import dal.StockRepository;
import gui.model.ProductComboBoxModel;
import gui.model.StockTableModel;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Adis Durguti
 */
public class StockForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form StockForm
     */
    public StockForm() {
        initComponents();
        loadTable();
        loadComboBoxProduct();
        tabelaSelectedIndexChange();
        
    }
    StockRepository sr = new StockRepository();
    StockTableModel stm = new StockTableModel();
    ProductRepository pr = new ProductRepository();
    Connect connect = new Connect();
    Connection con = null;
    ProductComboBoxModel pbm;
    PreparedStatement pst =null;
    ResultSet rs =null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stockIDtxt = new javax.swing.JTextField();
        stockNameTtx = new javax.swing.JTextField();
        productQuantityTXT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        deleteStockBTN = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        quantity_Validation = new javax.swing.JLabel();

        setTitle("Stock");

        stockIDtxt.setEditable(false);

        stockNameTtx.setEditable(false);
        stockNameTtx.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stockNameTtxFocusGained(evt);
            }
        });

        productQuantityTXT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        productQuantityTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productQuantityTXTKeyPressed(evt);
            }
        });

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        stockTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stockTableFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(stockTable);

        deleteStockBTN.setText("Delete Stock");
        deleteStockBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStockBTNActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("StockID");

        jLabel3.setText("Stock Name");

        jLabel4.setText("Product Quantity");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stockIDtxt)
                    .addComponent(stockNameTtx, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(productQuantityTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(quantity_Validation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(94, 94, 94)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(423, 423, 423)
                .addComponent(deleteStockBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(195, 195, 195)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(415, 415, 415))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stockIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stockNameTtx, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productQuantityTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(quantity_Validation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteStockBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void deleteStockBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStockBTNActionPerformed
        // TODO add your handling code here:
        int row = stockTable.getSelectedRow();
        if (row != -1) {
            Object[] ob = {"Yes", "No"};
            int i = JOptionPane.showOptionDialog(this, "Are u sure you want to delete ?", "Deletion", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
            if (i == 0) {
                try {
                    Stock s = stm.getStock(row);
                    sr.delete(s);
                    clear();
                    loadTable();
                } catch (PharmacyException ex) {
                    JOptionPane.showMessageDialog(this, "MSG: " + ex.getMessage());
                }
            } else {
                clear();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please , choose what you want to delete !");
        }
    }//GEN-LAST:event_deleteStockBTNActionPerformed

    private void stockTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stockTableFocusGained
        updateTable();
    }//GEN-LAST:event_stockTableFocusGained

    private void productQuantityTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productQuantityTXTKeyPressed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_productQuantityTXTKeyPressed

    private void stockNameTtxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stockNameTtxFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_stockNameTtxFocusGained
    private boolean check() {

        if (stockNameTtx.getText().trim().equals("") || productQuantityTXT.getText().trim().equals("")) {
            return true;
        }
        return false;
    }

    private void clear() {
        stockTable.clearSelection();
        stockIDtxt.setText("");
       // productComboBox.setSelectedItem(null);
       // productComboBox.repaint();
        stockNameTtx.setText("");
        productQuantityTXT.setText("");
    }

    public void loadComboBoxProduct() {
        List<Product> list = pr.findAll();
        pbm = new ProductComboBoxModel(list);
      //  productComboBox.setModel(pbm);
      //  productComboBox.repaint();
    }

    public void loadTable() {
        try {
            List<Stock> list = sr.findAll();
            stm = new StockTableModel(list);
            stockTable.setModel(stm);
            stm.fireTableDataChanged();
            tabelaSelectedIndexChange();
        } catch (PharmacyException pe) {
            pe.printStackTrace();
        }
    }

    public void updateTable() {
       try{
           con = connect.getConnect();
           String sql = "select * from Stock";
           pst=con.prepareStatement(sql);
           rs=pst.executeQuery();
           stockTable.setModel(DbUtils.resultSetToTableModel(rs));
       } catch (SQLException ex) {
            Logger.getLogger(StockForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void tabelaSelectedIndexChange() {
        updateTable();
        final ListSelectionModel rowSM = stockTable.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent Ise) {
                if (Ise.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel rowSM = (ListSelectionModel) Ise.getSource();
                int selectedIndex = rowSM.getAnchorSelectionIndex();
                if (selectedIndex > -1) {
                    Stock s = stm.getStock(selectedIndex);
                    stockIDtxt.setText(s.getStockID() + "");
                  //  productComboBox.setSelectedItem(s.getProductID());
                    stockNameTtx.setText(s.getStockName());
                    productQuantityTXT.setText(s.getQuantity() + "");

                    //productComboBox.repaint();

                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton deleteStockBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField productQuantityTXT;
    private javax.swing.JLabel quantity_Validation;
    private javax.swing.JTextField stockIDtxt;
    private javax.swing.JTextField stockNameTtx;
    private javax.swing.JTable stockTable;
    // End of variables declaration//GEN-END:variables
}
