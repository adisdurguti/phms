/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.view;

import bll.PerdoruesiReport;
import connection.Connect;
import dal.DbUtils;
import dal.PerdoruesiReportRepository;
import dal.PharmacyException;
import gui.model.PerdoruesiReportTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Adis Durguti
 */
public class ReportsForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form ReportsForm
     */
    PerdoruesiReportTableModel ptm = new PerdoruesiReportTableModel();
    PerdoruesiReportRepository pr = new PerdoruesiReportRepository();
    Connect connect = new Connect();
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    public ReportsForm() {
        initComponents();
        loadTableUser();
        loadTableSales();
        loadTableRegister();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        salesReport = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesReportTable = new javax.swing.JTable();
        searchProduct = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        serachOperatorSaleReport = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        saleInvoiceSEARCH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        date1 = new com.toedter.calendar.JDateChooser();
        date2 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        searchSalesByDates = new javax.swing.JButton();
        operatorNameDay = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dayRaportOperator = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        raportOfProduct = new javax.swing.JButton();
        userReportGenerator = new javax.swing.JButton();
        userReport = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userReportTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        userReportTextfield = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        registerpanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        RegisterRaportOfProduct = new javax.swing.JButton();
        RegisterRaportOfUser = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        RegisterSearchInvoice = new javax.swing.JTextField();
        RegisterSearchProduct = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        RegisterSearchOperator = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        date3 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        date4 = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        searchSalesByDates1 = new javax.swing.JButton();
        operatorNameDay1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        dayRaportOperator1 = new javax.swing.JButton();
        cancel1 = new javax.swing.JButton();

        setTitle("Reports");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTabbedPane1.setForeground(new java.awt.Color(102, 102, 102));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        salesReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        salesReportTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                salesReportTableFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(salesReportTable);

        searchProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchProductKeyReleased(evt);
            }
        });

        jLabel1.setText("Search Product");

        serachOperatorSaleReport.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serachOperatorSaleReportKeyReleased(evt);
            }
        });

        jLabel2.setText("Search Operator");

        saleInvoiceSEARCH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                saleInvoiceSEARCHKeyReleased(evt);
            }
        });

        jLabel3.setText("Search InvoiceNO.");

        jLabel4.setText("From this Date");

        jLabel5.setText("To this Date");

        searchSalesByDates.setText("Search");
        searchSalesByDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSalesByDatesActionPerformed(evt);
            }
        });

        jLabel6.setText("Operator Name");

        dayRaportOperator.setText("Day Raport Of Operator ");
        dayRaportOperator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayRaportOperatorActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        raportOfProduct.setText("Generate Raport of Product");
        raportOfProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raportOfProductActionPerformed(evt);
            }
        });

        userReportGenerator.setText("Generate Raport of User");
        userReportGenerator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userReportGeneratorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(raportOfProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userReportGenerator, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(raportOfProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userReportGenerator, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout salesReportLayout = new javax.swing.GroupLayout(salesReport);
        salesReport.setLayout(salesReportLayout);
        salesReportLayout.setHorizontalGroup(
            salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesReportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salesReportLayout.createSequentialGroup()
                        .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(saleInvoiceSEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(searchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(serachOperatorSaleReport, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(salesReportLayout.createSequentialGroup()
                                .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchSalesByDates, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(salesReportLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(295, 295, 295))
                            .addGroup(salesReportLayout.createSequentialGroup()
                                .addComponent(operatorNameDay, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dayRaportOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(salesReportLayout.createSequentialGroup()
                        .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
        );

        salesReportLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancel, date1, date2, dayRaportOperator, operatorNameDay, saleInvoiceSEARCH, searchProduct, searchSalesByDates, serachOperatorSaleReport});

        salesReportLayout.setVerticalGroup(
            salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(salesReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operatorNameDay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchSalesByDates, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayRaportOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serachOperatorSaleReport, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saleInvoiceSEARCH, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                .addContainerGap())
        );

        salesReportLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancel, date1, date2, dayRaportOperator, operatorNameDay, saleInvoiceSEARCH, searchProduct, searchSalesByDates, serachOperatorSaleReport});

        jTabbedPane1.addTab("Sales Reports", salesReport);

        userReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        userReportTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userReportTableFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(userReportTable);

        userReportTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userReportTextfieldKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Search User");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userReportTextfield)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userReportTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout userReportLayout = new javax.swing.GroupLayout(userReport);
        userReport.setLayout(userReportLayout);
        userReportLayout.setHorizontalGroup(
            userReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userReportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1676, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        userReportLayout.setVerticalGroup(
            userReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("User Reports", userReport);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        RegisterRaportOfProduct.setText("Generate Raport of Product");
        RegisterRaportOfProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterRaportOfProductActionPerformed(evt);
            }
        });

        RegisterRaportOfUser.setText("Generate Raport of User");
        RegisterRaportOfUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterRaportOfUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(RegisterRaportOfProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RegisterRaportOfUser, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterRaportOfProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterRaportOfUser, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jLabel7.setText("Search InvoiceNO.");

        RegisterSearchInvoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RegisterSearchInvoiceKeyReleased(evt);
            }
        });

        RegisterSearchProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RegisterSearchProductKeyReleased(evt);
            }
        });

        jLabel8.setText("Search Product");

        RegisterSearchOperator.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RegisterSearchOperatorKeyReleased(evt);
            }
        });

        jLabel9.setText("Search Operator");

        jLabel10.setText("From this Date");

        jLabel11.setText("To this Date");

        searchSalesByDates1.setText("Search");
        searchSalesByDates1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSalesByDates1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Operator Name");

        dayRaportOperator1.setText("Day Raport Of Operator ");
        dayRaportOperator1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayRaportOperator1ActionPerformed(evt);
            }
        });

        cancel1.setText("Cancel");
        cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerpanelLayout = new javax.swing.GroupLayout(registerpanel);
        registerpanel.setLayout(registerpanelLayout);
        registerpanelLayout.setHorizontalGroup(
            registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(registerpanelLayout.createSequentialGroup()
                        .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(RegisterSearchInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(RegisterSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(RegisterSearchOperator, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(registerpanelLayout.createSequentialGroup()
                                .addComponent(date4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchSalesByDates1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(registerpanelLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(295, 295, 295))
                            .addGroup(registerpanelLayout.createSequentialGroup()
                                .addComponent(operatorNameDay1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dayRaportOperator1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        registerpanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {RegisterSearchInvoice, RegisterSearchOperator, RegisterSearchProduct, cancel1, date3, date4, dayRaportOperator1, operatorNameDay1, searchSalesByDates1});

        registerpanelLayout.setVerticalGroup(
            registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(registerpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operatorNameDay1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchSalesByDates1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayRaportOperator1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterSearchOperator, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterSearchInvoice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Register Reports", registerpanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Sales Reports");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salesReportTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salesReportTableFocusGained
        loadTableSales();
    }//GEN-LAST:event_salesReportTableFocusGained

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        loadTableRegister();
        loadTableSales();
        loadTableUser();
    }//GEN-LAST:event_formKeyPressed

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        // TODO add your handling code here:
        loadTableRegister();
    }//GEN-LAST:event_jTable1FocusGained

    private void userReportTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userReportTableFocusGained
        // TODO add your handling code here:
        loadTableUser();
    }//GEN-LAST:event_userReportTableFocusGained

    private void searchProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchProductKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) salesReportTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        salesReportTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(searchProduct.getText(), 2));

    }//GEN-LAST:event_searchProductKeyReleased

    private void serachOperatorSaleReportKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serachOperatorSaleReportKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) salesReportTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        salesReportTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(serachOperatorSaleReport.getText().toLowerCase(), 1));
    }//GEN-LAST:event_serachOperatorSaleReportKeyReleased

    private void saleInvoiceSEARCHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saleInvoiceSEARCHKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) salesReportTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        salesReportTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(saleInvoiceSEARCH.getText(), 0));
    }//GEN-LAST:event_saleInvoiceSEARCHKeyReleased

    private void searchSalesByDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSalesByDatesActionPerformed
        // TODO add your handling code here:
        Date date = date1.getDate();
        Date dateother = date2.getDate();
        if (!(date == null || dateother == null)) {
            java.sql.Date fromDate = new java.sql.Date(date1.getDate().getTime());
            java.sql.Date toDate = new java.sql.Date(date2.getDate().getTime());
            try {
                con = connect.getConnect();
                String sql = "select bd.billNumber AS 'Invoice No', pe.userName AS 'Operator', p.productName AS 'Product',c.categoryType AS 'Product Type',p.productDosage AS 'Dose',bcd.quantity AS 'Quantity', bcd.subtotal AS 'Subtotal',"
                        + " bd.total AS 'Total'  , bd.billDate AS 'Date' , bcd.billTime AS 'Time' "
                        + "from BillOutCome bd inner join BillOutComeDetails bcd on bd.billOutComeID = bcd.billOutComeID "
                        + "inner join Product p on p.productID = bcd.productID "
                        + "inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID inner join Category c on p.categoryID = c.categoryID where bd.billDate BETWEEN '" + fromDate + "'AND'" + toDate + "'";

                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                salesReportTable.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                Logger.getLogger(ReportsForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill the dates !");
        }
    }//GEN-LAST:event_searchSalesByDatesActionPerformed

    private void dayRaportOperatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayRaportOperatorActionPerformed
        if (!operatorNameDay.getText().trim().equals("")) {
            try {
                // TODO add your handling code here:
                con = connect.getConnect();
                Date date = new Date();
                java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                JasperDesign jd = JRXmlLoader.load("C:\\Users\\Mimoza\\Desktop\\LabCourse\\PharmacyManagementSystemSoftware\\src\\reports\\SalesOperatorPerDay.jrxml");
                String sql = "select bd.billNumber, pe.userName , p.productName ,bcd.quantity, bcd.subtotal ,bd.total, bd.billDate, bcd.billTime "
                        + "from BillOutCome bd inner join BillOutComeDetails bcd on bd.billOutComeID = bcd.billOutComeID "
                        + "inner join Product p on p.productID = bcd.productID inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID "
                        + "where pe.userName = '" + operatorNameDay.getText() + "' AND bd.billDate ='" + sqlDate + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);
                Map<String, Object> params = new HashMap<String, Object>();
                params.put("operator", operatorNameDay.getText());
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, params, con);
                JasperViewer.viewReport(jp, false);
            } catch (JRException ex) {
                Logger.getLogger(ReportsForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill the Operator Name");
        }
    }//GEN-LAST:event_dayRaportOperatorActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        date1.setDate(null);
        date2.setDate(null);
        loadTableSales();
    }//GEN-LAST:event_cancelActionPerformed

    private void raportOfProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raportOfProductActionPerformed
        // TODO add your handling code here:
        if (!searchProduct.getText().trim().equals("")) {
            try {
                con = connect.getConnect();
                JasperDesign jd = JRXmlLoader.load("C:\\Users\\Mimoza\\Desktop\\LabCourse\\PharmacyManagementSystemSoftware\\src\\reports\\SalesProductReport.jrxml");
                String sql = "select bd.billNumber , pe.userName , p.productName ,c.categoryType ,p.productDosage,bcd.quantity , bcd.subtotal ,"
                        + " bd.total, bd.billDate , bcd.billTime "
                        + "from BillOutCome bd inner join BillOutComeDetails bcd on bd.billOutComeID = bcd.billOutComeID "
                        + "inner join Product p on p.productID = bcd.productID "
                        + "inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID inner join Category c on p.categoryID = c.categoryID"
                        + " where p.productName = '" + searchProduct.getText() + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);
                Map<String, Object> params = new HashMap<String, Object>();
                params.put("product", searchProduct.getText());
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, params, con);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please type Product Name in Search Product");
        }
    }//GEN-LAST:event_raportOfProductActionPerformed

    private void userReportGeneratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userReportGeneratorActionPerformed
        // TODO add your handling code here:
        if (!serachOperatorSaleReport.getText().trim().equals("")) {
            try {
                con = connect.getConnect();
                JasperDesign jd = JRXmlLoader.load("C:\\Users\\Mimoza\\Desktop\\LabCourse\\PharmacyManagementSystemSoftware\\src\\reports\\SalesOperator.jrxml");
                String sql = "select bd.billNumber , pe.userName , p.productName ,c.categoryType ,p.productDosage,bcd.quantity , bcd.subtotal ,"
                        + " bd.total, bd.billDate , bcd.billTime "
                        + "from BillOutCome bd inner join BillOutComeDetails bcd on bd.billOutComeID = bcd.billOutComeID "
                        + "inner join Product p on p.productID = bcd.productID "
                        + "inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID inner join Category c on p.categoryID = c.categoryID"
                        + " where pe.userName = '" + serachOperatorSaleReport.getText() + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);
                Map<String, Object> params = new HashMap<String, Object>();
                params.put("operator", serachOperatorSaleReport.getText());
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, params, con);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please type Operator Name in Search Operator");
        }
    }//GEN-LAST:event_userReportGeneratorActionPerformed

    private void RegisterRaportOfProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterRaportOfProductActionPerformed
        // TODO add your handling code here:

        if (!RegisterSearchProduct.getText().trim().equals("")) {
            try {
                con = connect.getConnect();
                JasperDesign jd = JRXmlLoader.load("C:\\Users\\Mimoza\\Desktop\\LabCourse\\PharmacyManagementSystemSoftware\\src\\reports\\RegisterProductReport.jrxml");
                String sql1 = "select bd.billNumber , pe.userName , p.productName , c.categoryType , p.productDosage , bcd.quantity  ,bcd.subtotal, bd.total , "
                        + "bd.billIncomeDate , bcd.billIncomeTime from BillIncome bd "
                        + "inner join BillIncomeDetails bcd on bd.billIncomeID = bcd.billIncomeID "
                        + "inner join Product p on p.productID = bcd.productID inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID "
                        + "inner join Category c on p.categoryID = c.categoryID"
                        + " where p.productName = '" + RegisterSearchProduct.getText() + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql1);
                jd.setQuery(newQuery);
                Map<String, Object> params = new HashMap<String, Object>();
                params.put("product", RegisterSearchProduct.getText());

                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, params, con);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please type Product Name in Search Product");
        }
    }//GEN-LAST:event_RegisterRaportOfProductActionPerformed

    private void RegisterRaportOfUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterRaportOfUserActionPerformed
        // TODO add your handling code here:
        if (!RegisterSearchOperator.getText().trim().equals("")) {
            try {
                con = connect.getConnect();
                JasperDesign jd = JRXmlLoader.load("C:\\Users\\Mimoza\\Desktop\\LabCourse\\PharmacyManagementSystemSoftware\\src\\reports\\RegisterOperatorReport.jrxml");
                String sql1 = "select bd.billNumber , pe.userName , p.productName , c.categoryType , p.productDosage , bcd.quantity  ,bcd.subtotal, bd.total , "
                        + "bd.billIncomeDate , bcd.billIncomeTime from BillIncome bd "
                        + "inner join BillIncomeDetails bcd on bd.billIncomeID = bcd.billIncomeID "
                        + "inner join Product p on p.productID = bcd.productID inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID "
                        + "inner join Category c on p.categoryID = c.categoryID"
                        + " where pe.userName = '" + RegisterSearchOperator.getText() + "'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql1);
                jd.setQuery(newQuery);
                Map<String, Object> params = new HashMap<String, Object>();
                params.put("operator", RegisterSearchOperator.getText());

                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, params, con);
                JasperViewer.viewReport(jp, false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please type Operator Name in Search Operator");
        }
    }//GEN-LAST:event_RegisterRaportOfUserActionPerformed

    private void RegisterSearchInvoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterSearchInvoiceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_RegisterSearchInvoiceKeyReleased

    private void RegisterSearchProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterSearchProductKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(RegisterSearchProduct.getText(), 2));
    }//GEN-LAST:event_RegisterSearchProductKeyReleased

    private void RegisterSearchOperatorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegisterSearchOperatorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_RegisterSearchOperatorKeyReleased

    private void searchSalesByDates1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSalesByDates1ActionPerformed
        // TODO add your handling code here:
         Date date = date3.getDate();
        Date dateother = date4.getDate();
        if (!(date == null || dateother == null)) {
            java.sql.Date fromDate = new java.sql.Date(date3.getDate().getTime());
            java.sql.Date toDate = new java.sql.Date(date4.getDate().getTime());
            try {
                con = connect.getConnect();
                String sql ="select bd.billNumber , pe.userName , p.productName , c.categoryType , p.productDosage , bcd.quantity  ,bcd.subtotal, bd.total , "
                        + "bd.billIncomeDate , bcd.billIncomeTime from BillIncome bd "
                        + "inner join BillIncomeDetails bcd on bd.billIncomeID = bcd.billIncomeID "
                        + "inner join Product p on p.productID = bcd.productID inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID "
                        + "inner join Category c on p.categoryID = c.categoryID where bd.billIncomeDate BETWEEN '" + fromDate + "'AND'" + toDate + "'";

                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                Logger.getLogger(ReportsForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill the dates !");
        }
    }//GEN-LAST:event_searchSalesByDates1ActionPerformed

    private void dayRaportOperator1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayRaportOperator1ActionPerformed
        // TODO add your handling code here:
        if (!operatorNameDay1.getText().trim().equals("")) {
            try {
                // TODO add your handling code here:
                con = connect.getConnect();
                Date date = new Date();
                java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                JasperDesign jd = JRXmlLoader.load("C:\\Users\\Mimoza\\Desktop\\LabCourse\\PharmacyManagementSystemSoftware\\src\\reports\\RegisterOperatorPerDay.jrxml");
                String sql = "select bd.billNumber , pe.userName , p.productName , c.categoryType , p.productDosage , bcd.quantity  ,bcd.subtotal, bd.total ,"
                        + "bd.billIncomeDate , bcd.billIncomeTime from BillIncome bd "
                        + " inner join BillIncomeDetails bcd on bd.billIncomeID = bcd.billIncomeID"
                        + " inner join Product p on p.productID = bcd.productID inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID "
                        + " inner join Category c on p.categoryID = c.categoryID"
                        + " where pe.userName = '" + operatorNameDay1.getText() + "' and bd.billIncomeDate = '"+ sqlDate +"'";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);
                Map<String, Object> params = new HashMap<String, Object>();
                params.put("operator", operatorNameDay1.getText());
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, params, con);
                JasperViewer.viewReport(jp, false);
            } catch (JRException ex) {
                Logger.getLogger(ReportsForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill the Operator Name");
        }
    }//GEN-LAST:event_dayRaportOperator1ActionPerformed

    private void cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel1ActionPerformed
        // TODO add your handling code here:
         date3.setDate(null);
        date4.setDate(null);
        loadTableRegister();
    }//GEN-LAST:event_cancel1ActionPerformed

    private void userReportTextfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userReportTextfieldKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) userReportTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        userReportTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(userReportTextfield.getText(), 0));
    }//GEN-LAST:event_userReportTextfieldKeyReleased

    public void loadTableUser(){
        try {
            con = connect.getConnect();
            String sql = "select p.userName AS 'UserName' , pr.status 'Status', pr.date AS 'Date', pr.time AS'Time' from Perdoruesi p inner join PerdoruesiReport pr on pr.perdoruesiID=p.perdoruesiID";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            userReportTable.setModel(DbUtils.resultSetToTableModel(rs));
            /* List<PerdoruesiReport> list = pr.findAll();
            ptm.addList(list);
            userReportTable.setModel(ptm);
            ptm.fireTableDataChanged();*/
        } catch (SQLException ex) {
            Logger.getLogger(PerdoruesiForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadTableSales() {
        try {
            con = connect.getConnect();
            String sql = "select bd.billNumber AS 'Invoice No', pe.userName AS 'Operator', p.productName AS 'Product',c.categoryType AS 'Product Type',p.productDosage AS 'Dose',bcd.quantity AS 'Quantity', bcd.subtotal AS 'Subtotal',"
                    + " bd.total AS 'Total'  , bd.billDate AS 'Date' , bcd.billTime AS 'Time' "
                    + "from BillOutCome bd inner join BillOutComeDetails bcd on bd.billOutComeID = bcd.billOutComeID "
                    + "inner join Product p on p.productID = bcd.productID "
                    + "inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID inner join Category c on p.categoryID = c.categoryID";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            salesReportTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(ReportsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadTableRegister() {
        try {
            con = connect.getConnect();
            String sql = "select bd.billNumber AS 'InvoiceNO', pe.userName AS 'Operator', p.productName AS 'Product',c.categoryType AS 'Product Type',p.productDosage AS 'Dose',bcd.quantity AS 'Quantity', bcd.subtotal AS 'Subtotal',"
                    + " bd.total AS 'Total'  , bd.billIncomeDate AS 'Date' , bcd.billIncomeTime AS 'Time' "
                    + "from BillIncome bd inner join BillIncomeDetails bcd on bd.billIncomeID = bcd.billIncomeID "
                    + "inner join Product p on p.productID = bcd.productID inner join Perdoruesi pe on pe.perdoruesiID=bd.perdoruesiID inner join Category c on p.categoryID = c.categoryID";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(ReportsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RegisterRaportOfProduct;
    private javax.swing.JButton RegisterRaportOfUser;
    private javax.swing.JTextField RegisterSearchInvoice;
    private javax.swing.JTextField RegisterSearchOperator;
    private javax.swing.JTextField RegisterSearchProduct;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cancel1;
    private com.toedter.calendar.JDateChooser date1;
    private com.toedter.calendar.JDateChooser date2;
    private com.toedter.calendar.JDateChooser date3;
    private com.toedter.calendar.JDateChooser date4;
    private javax.swing.JButton dayRaportOperator;
    private javax.swing.JButton dayRaportOperator1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField operatorNameDay;
    private javax.swing.JTextField operatorNameDay1;
    private javax.swing.JButton raportOfProduct;
    private javax.swing.JPanel registerpanel;
    private javax.swing.JTextField saleInvoiceSEARCH;
    private javax.swing.JPanel salesReport;
    private javax.swing.JTable salesReportTable;
    private javax.swing.JTextField searchProduct;
    private javax.swing.JButton searchSalesByDates;
    private javax.swing.JButton searchSalesByDates1;
    private javax.swing.JTextField serachOperatorSaleReport;
    private javax.swing.JPanel userReport;
    private javax.swing.JButton userReportGenerator;
    private javax.swing.JTable userReportTable;
    private javax.swing.JTextField userReportTextfield;
    // End of variables declaration//GEN-END:variables
}
